#!/bin/bash

# Establishes base directory of script
BASEDIR=$(dirname $0)

# Establishes version number
VERSION=$"1.0"

# Establishes size in KB
SIZEKB=$"482.7"

# Check if root
if [ $USER = "root" ]; then

# Build files

# Desktop
    echo "#!/bin/bash

echo '#!/usr/bin/env xdg-open
[Desktop Entry]
Categories=Utility
Comment=
Exec=bash /usr/lib/tux-disc/tux-disc_v$VERSION.sh
Hidden=no
Icon=/usr/lib/tux-disc/tux-disc.png
Name=Tux Disc
Terminal=true
Type=Application
Version=$VERSION' > ./tux-disc_v$VERSION/usr/lib/tux-disc/tux-disc_v$VERSION.desktop

chmod a+x ./tux-disc_v$VERSION/usr/lib/tux-disc/tux-disc_v$VERSION.desktop

if [ -e ./tux-disc_v$VERSION/usr/lib/tux-disc/tux-disc_v$VERSION.desktop ]; then
    echo 'Desktop file built'
else
    echo 'Failed to build desktop file'
fi" > ./create-desktop.sh

# Control
    echo "#!/bin/bash

echo 'Package: tux-disc
Architecture: all
Essential: no
Maintainer: John G Laufert
Depends:
Priority: optional
Section: utilities
Version: $VERSION
Installed-Size: $SIZEKB
Description: Downloads Linux ISO of choice based on user input' > ./tux-disc_v$VERSION/DEBIAN/control && chmod a+x ./tux-disc_v$VERSION/DEBIAN/control

if [ -e ./tux-disc_v$VERSION/DEBIAN/control ]; then
    echo 'Control file built'
else
    echo 'Failed to build control file'
fi" > ./create-control.sh

# Postinst
    echo "#!/bin/bash

echo '#!/bin/bash

cp /usr/lib/tux-disc/tux-disc_v$VERSION.desktop /home/*/.local/share/applications/ && update-desktop-database /home/*/.local/share/applications/' > ./tux-disc_v$VERSION/DEBIAN/postinst && chmod a+x ./tux-disc_v$VERSION/DEBIAN/postinst

if [ -e ./tux-disc_v$VERSION/DEBIAN/postinst ]; then
    echo 'Postinst file built'
else
    echo 'Failed to build postinst file'
fi" > ./create-postinst.sh

# Prerm
    echo "#!/bin/bash

echo 'rm /home/*/.local/share/applications/tux-disc_v$VERSION.desktop' > ./tux-disc_v$VERSION/DEBIAN/prerm && chmod a+x ./tux-disc_v$VERSION/DEBIAN/prerm

if [ -e ./tux-disc_v$VERSION/DEBIAN/prerm ]; then
    echo 'Prerm file built'
else
    echo 'Failed to build prerm file'
fi" > ./create-prerm.sh

# Command
    echo "#!/bin/bash

echo '#!/bin/bash

$STYLEVER = v$VERSION

bash /usr/lib/tux-disc/tux-disc_v$VERSION.sh' > ./tux-disc_v$VERSION/usr/bin/tux-disc && chmod a+x ./tux-disc_v$VERSION/usr/bin/tux-disc

if [ -e ./tux-disc_v$VERSION/usr/bin/tux-disc ]; then
    echo 'Command file built'
else
    echo 'Failed to command command file'
fi" > ./create-command.sh

# Binary build
    echo "#!/bin/bash

echo 'V Folder size V'
du -sh ./tux-disc_v$VERSION

chown -R root:root ./tux-disc_v$VERSION/ && dpkg-deb --build ./tux-disc_v$VERSION
rm -r ./tux-disc_v$VERSION

if [ -e ./tux-disc_v$VERSION.deb ]; then
    echo 'Binary file built'
else
    echo 'Failed to command binary file'
fi" > ./create-binary.sh

# Directories
    echo "#!/bin/bash

mkdir ./tux-disc_v$VERSION
mkdir ./tux-disc_v$VERSION/DEBIAN
mkdir ./tux-disc_v$VERSION/usr
mkdir ./tux-disc_v$VERSION/usr/bin
mkdir ./tux-disc_v$VERSION/usr/lib
mkdir ./tux-disc_v$VERSION/usr/lib/tux-disc

if [ -d ./tux-disc_v$VERSION ]; then
    echo 'Directories built'
else
    echo 'Failed to build directories'
fi" > ./create-directories.sh

# Move and copy files
    echo "#!/bin/bash

# Changelog
cp ./CHANGELOG.md ./tux-disc_v$VERSION/DEBIAN/changelog

# License
cp ./LICENSE ./tux-disc_v$VERSION/DEBIAN/copyright

# README
cp ./README.md ./tux-disc_v$VERSION/usr/lib/tux-disc/

# Script
cp ./tux-disc_v$VERSION.sh ./tux-disc_v$VERSION/usr/lib/tux-disc/

# Tux
cp ./tux-disc.png ./tux-disc_v$VERSION/usr/lib/tux-disc/" > ./copy-files.sh

# Copy source files
    echo "#!/bin/bash

# Command
cp ./tux-disc_v$VERSION/usr/bin/tux-disc /usr/bin/

# Folder
cp -r ./tux-disc_v$VERSION/usr/lib/tux-disc /usr/lib/

# Desktop
cp ./tux-disc_v$VERSION/usr/lib/tux-disc/tux-disc_v$VERSION.desktop /home/*/.local/share/applications/ && update-desktop-database /home/*/.local/share/applications/

# Remove source folder
rm -r ./tux-disc_v$VERSION" > ./copy-source.sh

# Remove source files
    echo "#!/bin/bash

# Command
rm /usr/bin/tux-disc

# Folder
rm -r /usr/lib/tux-disc

# Desktop
rm /home/*/.local/share/applications/tux-disc_v$VERSION.desktop" > ./make-uninstall

# If not run as root
else
# Message
    echo "Please run this build script as root"
fi
